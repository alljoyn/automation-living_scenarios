# Copyright AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('env')

generated = env.CodeGen('../common/LivingScenario')
generated_src = filter(lambda f: not '.h' in f.name, generated)

env.Append(CPPPATH = ['generated'])
env.Prepend(LIBS = ['alljoyn_ddapi'])

if env['BR'] == 'on':
    # Build apps with bundled daemon support
    env.Prepend(LIBS = [env['ajrlib']])


living_scenario = []

#Temporary example of observer
living_scenario.append(env.Program(target='LivingScenarioObserver',
                        source=['src/LivingScenarioObserver.cc', generated_src]))

#Temporary example of advertiser
living_scenario.append(env.Program(target='LivingScenarioAdvertiser',
                        source=['src/LivingScenarioAdvertiser.cc', generated_src]))

Return('living_scenario')
